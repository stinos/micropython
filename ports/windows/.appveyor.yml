image: Visual Studio 2013
clone_depth: 1
skip_tags: true

environment:
  # Python version used
  MICROPY_CPYTHON3: c:/python34/python.exe

init:
  # Set build version number to commit to be travis-like
- ps: Update-AppveyorBuild -Version $env:appveyor_repo_commit.substring(0,8)

build_script:
- ps: |
    $MicroPythonDir = $env:APPVEYOR_BUILD_FOLDER
    $Bash = "C:/msys64/usr/bin/bash.exe"

    # Write project file to enable parallel building of projects
    @"
    <?xml version="1.0" encoding="utf-8"?>
    <Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
      <Target Name="Build">
        <MsBuild BuildInParallel="True" Projects="mpy-cross\mpy-cross.vcxproj;ports\windows\micropython.vcxproj"/>
      </Target>
    </Project>
    "@ | Set-Content (Join-Path $MicroPythonDir "build.proj")

    function CheckStatus {
      if ($LASTEXITCODE -ne 0) {
        throw "$Args exited with code $LASTEXITCODE"
      }
    }

    function BuildAndTestMsvc {
      Write-Host -ForegroundColor Green "Building $Args"
      cd $MicroPythonDir
      msbuild build.proj /m "/p:Configuration=$($Args[0]);Platform=$($Args[1]);PyPython=$($env:MICROPY_CPYTHON3)"
      CheckStatus("build")
      cd (Join-Path $MicroPythonDir 'tests')
      & $env:MICROPY_CPYTHON3 run-tests
      CheckStatus("test")
      & $env:MICROPY_CPYTHON3 run-tests --via-mpy -d basics float micropython
      CheckStatus("test via mpy")
    }

    function BuildAndTestMingw {
      Write-Host -ForegroundColor Green "Building $Args"
      $env:MSYSTEM = $Args[0]
      $env:CHERE_INVOKING = 'enabled_from_arguments'
      cd (Join-Path $MicroPythonDir 'ports/windows')
      & $Bash -l -c "make -B -j4 V=1 PYTHON=$env:MICROPY_CPYTHON3"
      CheckStatus "$env:MSYSTEM build"
      cd (Join-Path $MicroPythonDir 'mpy-cross')
      # Building of mpy-cross hasn't been fixed across all possible windows/WSL/...
      # variations and the STRIP step tries to strip mpy-cross whereas that should be
      # mpy-cross.exe. Workaround for now by skipping actual strip and size commands.
      & $Bash -l -c "make -B -j4 V=1 STRIP=echo SIZE=echo PYTHON=$env:MICROPY_CPYTHON3"
      CheckStatus "$env:MSYSTEM build"
      cd (Join-Path $MicroPythonDir 'tests')
      $testArgs = @('run-tests')
      foreach ($skipTest in @('math_fun', 'float2int_double', 'float_parse', 'math_domain_special')) {
        $testArgs = $testArgs + '-e' + $skipTest
      }
      & $env:MICROPY_CPYTHON3 $testArgs
      CheckStatus "$env:MSYSTEM test"
      & $env:MICROPY_CPYTHON3 ($testArgs + @('--via-mpy', '-d', 'basics', 'float', 'micropython'))
      CheckStatus "$env:MSYSTEM test via mpy"
    }

    BuildAndTestMsvc "Debug" "Win32"
    BuildAndTestMsvc "Release" "Win32"
    BuildAndTestMsvc "Debug" "x64"
    BuildAndTestMsvc "Release" "x64"
    BuildAndTestMingw "MINGW32"
    BuildAndTestMingw "MINGW64"

# Note this relies on building the mingw version after the msvc version,
# so the former replaces the .exe files built by the latter and we pick those up here.
artifacts:
  - path: ports/windows/build/Release*/micropython.exe
    name: micropython-msvc
  - path: mpy-cross/build/Release*/mpy-cross.exe
    name: mpy-cross-msvc
  - path: ports/windows/micropython.exe
    name: micropython-mingw
  - path: mpy-cross/mpy-cross.exe
    name: mpy-cross-mingw
